name: Continous Integration

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'

  pull_request:
    paths:
      - 'backend/**'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create .env
        run: |
          cd backend
          cp .env.example .env

      - name: Composer install
        run: |
          cd backend
          ./run composer install

      - name: Generate Codeception files
        run: |
          cd backend
          ./run codecept build

      - name: Setup Uploads assets permissions
        run: |
          cd backend
          sudo chown -R www-data:www-data public/assets/uploads

      - name: Up containers
        run: |
          cd backend
          ./run up -d

      - name: PHPUnit Units test  
        run: |
          cd backend
          ./run test tests/Unit

  acceptance_tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create .env
        run: |
          cd backend
          cp .env.example .env

      - name: Composer install
        run: |
          cd backend
          ./run composer install

      - name: Generate Codeception files
        run: |
          cd backend
          ./run codecept build

      - name: Up containers
        run: |
          cd backend
          ./run up -d

      - name: See containers
        run: |
          cd backend
          ./run ps

      - name: PHPUnit Acceptance test
        run: |
          cd backend
          ./run test:browser

  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create .env
        run: |
          cd backend
          cp .env.example .env

      - name: Composer install
        run: |
          cd backend
          ./run composer install

      - name: PSR-4 Checker
        run: |
          cd backend
          ./run composer dump-autoload --optimize --strict-psr

      - name: Generate Codeception files
        run: |
          cd backend
          ./run codecept build

      - name: PHPCS
        run: |
          cd backend
          ./run phpcs

      - name: PHPStan
        run: |
          cd backend
          ./run phpstan
